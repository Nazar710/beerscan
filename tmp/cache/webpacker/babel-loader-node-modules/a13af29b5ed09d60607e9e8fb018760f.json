{"ast":null,"code":"function order_by_occurrence(arr) {\n  var counts = {};\n  arr.forEach(function (value) {\n    if (!counts[value]) {\n      counts[value] = 0;\n    }\n\n    counts[value]++;\n  });\n  return Object.keys(counts).sort(function (curKey, nextKey) {\n    return counts[curKey] < counts[nextKey];\n  });\n}\n\nfunction load_quagga() {\n  if ($('#barcode-scanner').length > 0 && navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    var last_result = [];\n\n    if (Quagga.initialized == undefined) {\n      Quagga.onDetected(function (result) {\n        var last_code = result.codeResult.code;\n        last_result.push(last_code);\n\n        if (last_result.length > 20) {\n          code = order_by_occurrence(last_result)[0];\n          last_result = [];\n          Quagga.stop();\n          $.ajax({\n            type: \"POST\",\n            url: '/beers/get_barcode',\n            data: {\n              upc: code\n            }\n          });\n        }\n      });\n    }\n\n    Quagga.init({\n      inputStream: {\n        name: \"Live\",\n        type: \"LiveStream\",\n        numOfWorkers: navigator.hardwareConcurrency,\n        target: document.querySelector('#barcode-scanner')\n      },\n      decoder: {\n        readers: [\"code_128_reader\"]\n      }\n    }, function (err) {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      Quagga.initialized = true;\n      Quagga.start();\n    });\n  }\n}\n\n;\n$(document).ready(load_quagga);","map":{"version":3,"sources":["/home/martino/code/MartinoFabbro/beerscan/app/javascript/packs/barcode-scan.js"],"names":["order_by_occurrence","arr","counts","forEach","value","Object","keys","sort","curKey","nextKey","load_quagga","$","length","navigator","mediaDevices","getUserMedia","last_result","Quagga","initialized","undefined","onDetected","result","last_code","codeResult","code","push","stop","ajax","type","url","data","upc","init","inputStream","name","numOfWorkers","hardwareConcurrency","target","document","querySelector","decoder","readers","err","console","log","start","ready"],"mappings":"AAAA,SAASA,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAASC,KAAT,EAAe;AACvB,QAAG,CAACF,MAAM,CAACE,KAAD,CAAV,EAAmB;AACfF,MAAAA,MAAM,CAACE,KAAD,CAAN,GAAgB,CAAhB;AACH;;AACDF,IAAAA,MAAM,CAACE,KAAD,CAAN;AACH,GALD;AAOA,SAAOC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,IAApB,CAAyB,UAASC,MAAT,EAAgBC,OAAhB,EAAyB;AACrD,WAAOP,MAAM,CAACM,MAAD,CAAN,GAAiBN,MAAM,CAACO,OAAD,CAA9B;AACH,GAFM,CAAP;AAGD;;AAED,SAASC,WAAT,GAAsB;AACpB,MAAIC,CAAC,CAAC,kBAAD,CAAD,CAAsBC,MAAtB,GAA+B,CAA/B,IAAoCC,SAAS,CAACC,YAA9C,IAA8D,OAAOD,SAAS,CAACC,YAAV,CAAuBC,YAA9B,KAA+C,UAAjH,EAA6H;AAE3H,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAIC,MAAM,CAACC,WAAP,IAAsBC,SAA1B,EAAqC;AACnCF,MAAAA,MAAM,CAACG,UAAP,CAAkB,UAASC,MAAT,EAAiB;AACjC,YAAIC,SAAS,GAAGD,MAAM,CAACE,UAAP,CAAkBC,IAAlC;AACAR,QAAAA,WAAW,CAACS,IAAZ,CAAiBH,SAAjB;;AACA,YAAIN,WAAW,CAACJ,MAAZ,GAAqB,EAAzB,EAA6B;AAC3BY,UAAAA,IAAI,GAAGxB,mBAAmB,CAACgB,WAAD,CAAnB,CAAiC,CAAjC,CAAP;AACAA,UAAAA,WAAW,GAAG,EAAd;AACAC,UAAAA,MAAM,CAACS,IAAP;AACAf,UAAAA,CAAC,CAACgB,IAAF,CAAO;AACLC,YAAAA,IAAI,EAAE,MADD;AAELC,YAAAA,GAAG,EAAE,oBAFA;AAGLC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,GAAG,EAAEP;AAAP;AAHD,WAAP;AAKD;AACF,OAbD;AAcD;;AAEDP,IAAAA,MAAM,CAACe,IAAP,CAAY;AACVC,MAAAA,WAAW,EAAG;AACZC,QAAAA,IAAI,EAAG,MADK;AAEZN,QAAAA,IAAI,EAAG,YAFK;AAGZO,QAAAA,YAAY,EAAEtB,SAAS,CAACuB,mBAHZ;AAIZC,QAAAA,MAAM,EAAEC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB;AAJI,OADJ;AAOVC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAG,CAAC,iBAAD;AADL;AAPC,KAAZ,EAUE,UAASC,GAAT,EAAc;AACZ,UAAIA,GAAJ,EAAS;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB;AAAQ;;AACrCzB,MAAAA,MAAM,CAACC,WAAP,GAAqB,IAArB;AACAD,MAAAA,MAAM,CAAC4B,KAAP;AACH,KAdD;AAgBD;AACF;;AAAA;AAEDlC,CAAC,CAAC2B,QAAD,CAAD,CAAYQ,KAAZ,CAAkBpC,WAAlB","sourcesContent":["function order_by_occurrence(arr) {\n  var counts = {};\n  arr.forEach(function(value){\n      if(!counts[value]) {\n          counts[value] = 0;\n      }\n      counts[value]++;\n  });\n\n  return Object.keys(counts).sort(function(curKey,nextKey) {\n      return counts[curKey] < counts[nextKey];\n  });\n}\n\nfunction load_quagga(){\n  if ($('#barcode-scanner').length > 0 && navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function') {\n\n    var last_result = [];\n    if (Quagga.initialized == undefined) {\n      Quagga.onDetected(function(result) {\n        var last_code = result.codeResult.code;\n        last_result.push(last_code);\n        if (last_result.length > 20) {\n          code = order_by_occurrence(last_result)[0];\n          last_result = [];\n          Quagga.stop();\n          $.ajax({\n            type: \"POST\",\n            url: '/beers/get_barcode',\n            data: { upc: code }\n          });\n        }\n      });\n    }\n\n    Quagga.init({\n      inputStream : {\n        name : \"Live\",\n        type : \"LiveStream\",\n        numOfWorkers: navigator.hardwareConcurrency,\n        target: document.querySelector('#barcode-scanner')\n      },\n      decoder: {\n          readers : [\"code_128_reader\"]\n      }\n    },function(err) {\n        if (err) { console.log(err); return }\n        Quagga.initialized = true;\n        Quagga.start();\n    });\n\n  }\n};\n\n$(document).ready(load_quagga);\n"]},"metadata":{},"sourceType":"module"}